@prefix owl: <http://www.w3.org/2002/07/owl#>.
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>.
@prefix rdfa: <http://www.w3.org/ns/rdfa#>.
@prefix xhv: <http://www.w3.org/1999/xhtml/vocab#>.
@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.
@prefix r2h: <http://rdf2h.github.io/2015/rdf2h#>.
@prefix s: <http://schema.org/>.
@prefix lodide: <http://ontology.lodide.io/>.
@prefix dc: <http://purl.org/dc/elements/1.1/>.
@prefix schema: <http://schema.org/>.

<> a lodide:Exercise;
    lodide:intro "<h2>Film titles in DBpedia</h2>\n            <p>In this example you see how to write a SPARQL query to get film titles from DBpedia.</p>";
    lodide:finalWords "<ul>\n                    <li>Press the \"Run my code\"-button to verify your triple.</li>\n                </ul>";
    lodide:dataSource _:b30.
_:b30 lodide:taskDescription "Write a SPARQL query to select ten film titles, using DBpedia SPARQL endpoint (http://dbpedia.org/sparql).<br><br>\n                                  <ol><li>First you need to find all the films, so the entities with <code>rdfs:type</code> (&lt;http://www.w3.org/2000/01/rdf-schema#type&gt;) equals to <code>&lt;http://dbpedia.org/ontology/Film&gt;</code>.<br>\n                                  </li><li>Second you need to SELECT for each film its <code>rdfs:label</code> (&lt;http://www.w3.org/2000/01/rdf-schema#label&gt;).<br>\n                                  </li><li>Then you may want to FILTER the labels getting only English ones. This come for free: <code>FILTER (lang(?label) = 'en')</code>.\n                                  </li><li>Finally you can LIMIT your query to 10 to reduce the number of results.</li></ol>\n                                  For additional help, check out \"<a href=\"https://vimeo.com/57684537\">Chapter 1 Webinar Clip: SPARQL querying</a>\" from EUCLID project on Vimeo.";
    lodide:taskSolutionResource <http://dbpedia.org/sparql>;
    lodide:taskSolutionResourceCurrent <http://dbpedia.org/sparql>;
    lodide:taskSolutionCode "PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nSELECT ?label\nWHERE {\n  ?movie a <http://dbpedia.org/ontology/Film> .\n  ?movie rdfs:label ?label .\n  FILTER (lang(?label) = 'en')\n} LIMIT 10";
    lodide:taskSolutionCodeCurrent "PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nSELECT ?label\nWHERE {\n  ?movie a <http://dbpedia.org/ontology/Film> .\n  ?movie rdfs:label ?label .\n  FILTER (lang(?label) = 'en')\n} LIMIT 10".
<> lodide:dataProcessing _:b31.
_:b31 lodide:taskDescription "In this exercise nothing needs to be done here. But studying the code below isn't a bad idea.\n                              The code read the triples from the JSON <code>j</code> obtained via SPARQL query, and print an array of titles.";
    lodide:taskSolutionCodeCurrent "var res = j.results.bindings;\nvar labels = [];\nfor (k in res) {\n    labels.push(res[k].label.value);\n}\nalert(labels);".
